// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// getGeno
arma::Mat<unsigned char> getGeno(Rcpp::List& geno, int nInd, int nChr, int ploidy, arma::ivec& lociPerChr, arma::uvec& lociLoc);
RcppExport SEXP AlphaSimR_getGeno(SEXP genoSEXP, SEXP nIndSEXP, SEXP nChrSEXP, SEXP ploidySEXP, SEXP lociPerChrSEXP, SEXP lociLocSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List& >::type geno(genoSEXP);
    Rcpp::traits::input_parameter< int >::type nInd(nIndSEXP);
    Rcpp::traits::input_parameter< int >::type nChr(nChrSEXP);
    Rcpp::traits::input_parameter< int >::type ploidy(ploidySEXP);
    Rcpp::traits::input_parameter< arma::ivec& >::type lociPerChr(lociPerChrSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type lociLoc(lociLocSEXP);
    rcpp_result_gen = Rcpp::wrap(getGeno(geno, nInd, nChr, ploidy, lociPerChr, lociLoc));
    return rcpp_result_gen;
END_RCPP
}
// cross2
Rcpp::List cross2(const Rcpp::List& fGeno, arma::uvec fPar, const Rcpp::List& mGeno, arma::uvec mPar, const Rcpp::List& genMaps);
RcppExport SEXP AlphaSimR_cross2(SEXP fGenoSEXP, SEXP fParSEXP, SEXP mGenoSEXP, SEXP mParSEXP, SEXP genMapsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List& >::type fGeno(fGenoSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type fPar(fParSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type mGeno(mGenoSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type mPar(mParSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type genMaps(genMapsSEXP);
    rcpp_result_gen = Rcpp::wrap(cross2(fGeno, fPar, mGeno, mPar, genMaps));
    return rcpp_result_gen;
END_RCPP
}
// readAF
arma::Mat<unsigned char> readAF(int nHap, int segSites, arma::ivec keep);
RcppExport SEXP AlphaSimR_readAF(SEXP nHapSEXP, SEXP segSitesSEXP, SEXP keepSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nHap(nHapSEXP);
    Rcpp::traits::input_parameter< int >::type segSites(segSitesSEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type keep(keepSEXP);
    rcpp_result_gen = Rcpp::wrap(readAF(nHap, segSites, keep));
    return rcpp_result_gen;
END_RCPP
}
