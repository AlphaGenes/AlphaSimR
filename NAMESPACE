# Generated by roxygen2: do not edit by hand

export(MaCS)
export(RRBLUP)
export(RRBLUPMemUse)
export(RRBLUP_GCA)
export(RRBLUP_SCA)
export(addSnpChip)
export(addStructuredSnpChips)
export(addTraitA)
export(addTraitAD)
export(addTraitADG)
export(addTraitAG)
export(calcG)
export(calcGCA)
export(calcGIbs)
export(calcPheno)
export(corVar)
export(createSimulation)
export(editGenome)
export(fastDist)
export(fastPairDist)
export(gaussKernel)
export(hybridCross)
export(loadPedigreeFromFile)
export(makeCross)
export(makeCross2)
export(makeDH)
export(meanG)
export(meanP)
export(newPop)
export(pedigreeCross)
export(popVar)
export(pullMultipleSnpGeno)
export(pullMultipleSnpHaplo)
export(pullQtlGeno)
export(pullQtlHaplo)
export(pullSegSiteHaplo)
export(pullSnpGeno)
export(pullSnpHaplo)
export(quickPop)
export(randCross)
export(randCross2)
export(readMat)
export(rescaleTraits)
export(resetPop)
export(runMacs)
export(selIndex)
export(selInt)
export(selectFam)
export(selectFemale)
export(selectInd)
export(selectMale)
export(selectWithinFam)
export(self)
export(setEBV)
export(setPheno)
export(setPhenoGCA)
export(smithHazel)
export(solveMKM)
export(solveMVM)
export(solveRRBLUP)
export(solveRRBLUPMK)
export(solveRRBLUPMV)
export(solveUVM)
export(sortPed)
export(trackHaploPop)
export(varAD)
export(varG)
export(varP)
export(writeAlphaGenotypes)
export(writeAlphaHaplotypes)
export(writeRecords)
exportClasses(GCAsol)
exportClasses(HybridPop)
exportClasses(LociMap)
exportClasses(MapPop)
exportClasses(Pedigree)
exportClasses(Pop)
exportClasses(RRsol)
exportClasses(RawPop)
exportClasses(SCAsol)
exportClasses(SimParam)
exportClasses(TraitA)
exportClasses(TraitAD)
exportClasses(TraitADG)
exportClasses(TraitAG)
import(Rcpp)
import(RcppArmadillo)
importFrom(methods,new)
importFrom(methods,validObject)
importFrom(stats,aggregate)
importFrom(stats,coef)
importFrom(stats,dnorm)
importFrom(stats,lm)
importFrom(stats,pnorm)
importFrom(stats,qgamma)
importFrom(stats,qnorm)
importFrom(stats,rnorm)
importFrom(stats,var)
importFrom(utils,combn)
importFrom(utils,read.table)
importFrom(utils,write.table)
useDynLib(AlphaSimR, .registration = TRUE)
